/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/@photo-sphere-viewer/equirectangular-video-adapter@5.10.0/index.module.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
/*!
 * Photo Sphere Viewer / Equirectangular Video Adapter 5.10.0
 * @copyright 2015-2024 Damien "Mistic" Sorel
 * @licence MIT (https://opensource.org/licenses/MIT)
 */
import{CONSTANTS,EquirectangularAdapter,PSVError as PSVError2,utils}from"@photo-sphere-viewer/core";import{MathUtils,Mesh as Mesh2,MeshBasicMaterial,SphereGeometry}from"three";import{AbstractAdapter,PSVError}from"@photo-sphere-viewer/core";import{VideoTexture}from"three";function createVideo({src:e,withCredentials:t,muted:r,autoplay:i}){const o=document.createElement("video");return o.crossOrigin=t?"use-credentials":"anonymous",o.loop=!0,o.playsInline=!0,o.autoplay=i,o.muted=r,o.preload="metadata",e instanceof MediaStream?o.srcObject=e:o.src=e,o}var AbstractVideoAdapter=class extends AbstractAdapter{constructor(e){super(e)}init(){super.init(),this.viewer.needsContinuousUpdate(!0)}destroy(){this.__removeVideo(),super.destroy()}supportsPreload(){return!1}supportsTransition(){return!1}loadTexture(e){if("object"!=typeof e||!e.source)return Promise.reject(new PSVError("Invalid panorama configuration, are you using the right adapter?"));if(!this.viewer.getPlugin("video"))return Promise.reject(new PSVError("Video adapters require VideoPlugin to be loaded too."));const t=createVideo({src:e.source,withCredentials:this.viewer.config.withCredentials,muted:this.config.muted,autoplay:!1});return this.__videoLoadPromise(t).then((()=>{const r=new VideoTexture(t);return{panorama:e,texture:r}}))}switchVideo(e){let t,r,i=!this.config.autoplay,o=this.config.muted,s=1;this.video&&({currentTime:t,duration:r,paused:i,muted:o,volume:s}=this.video),this.__removeVideo(),this.video=e.image,this.video.duration===r&&(this.video.currentTime=t),this.video.muted=o,this.video.volume=s,i||this.video.play()}setTextureOpacity(e,t){e.material.opacity=t,e.material.transparent=t<1}disposeTexture(e){e.texture.dispose()}__removeVideo(){this.video&&(this.video.pause(),this.video.remove(),delete this.video)}__videoLoadPromise(e){return new Promise(((t,r)=>{const i=()=>{this.video&&e.duration===this.video.duration?t(this.__videoBufferPromise(e,this.video.currentTime)):t(),e.removeEventListener("loadedmetadata",i)},o=t=>{r(t),e.removeEventListener("error",o)};e.addEventListener("loadedmetadata",i),e.addEventListener("error",o)}))}__videoBufferPromise(e,t){return new Promise((r=>{function i(){const t=e.buffered;for(let o=0,s=t.length;o<s;o++)if(t.start(o)<=e.currentTime&&t.end(o)>=e.currentTime){e.pause(),e.removeEventListener("buffer",i),e.removeEventListener("progress",i),r();break}}e.currentTime=Math.min(t+2e3,e.duration),e.muted=!0,e.addEventListener("buffer",i),e.addEventListener("progress",i),e.play()}))}};AbstractVideoAdapter.supportsDownload=!1;var getConfig=utils.getConfigParser({resolution:64,autoplay:!1,muted:!1},{resolution:e=>{if(!e||!MathUtils.isPowerOfTwo(e))throw new PSVError2("EquirectangularTilesAdapter resolution must be power of two");return e}}),EquirectangularVideoAdapter=class extends AbstractVideoAdapter{constructor(e,t){super(e),this.config=getConfig(t),this.SPHERE_SEGMENTS=this.config.resolution,this.SPHERE_HORIZONTAL_SEGMENTS=this.SPHERE_SEGMENTS/2}destroy(){this.adapter?.destroy(),delete this.adapter,super.destroy()}textureCoordsToSphericalCoords(e,t){return this.getAdapter().textureCoordsToSphericalCoords(e,t)}sphericalCoordsToTextureCoords(e,t){return this.getAdapter().sphericalCoordsToTextureCoords(e,t)}loadTexture(e){return super.loadTexture(e).then((({texture:t})=>{const r=t.image,i={isEquirectangular:!0,fullWidth:r.videoWidth,fullHeight:r.videoHeight,croppedWidth:r.videoWidth,croppedHeight:r.videoHeight,croppedX:0,croppedY:0,poseHeading:0,posePitch:0,poseRoll:0};return{panorama:e,texture:t,panoData:i}}))}createMesh(){const e=new SphereGeometry(CONSTANTS.SPHERE_RADIUS,this.SPHERE_SEGMENTS,this.SPHERE_HORIZONTAL_SEGMENTS,-Math.PI/2).scale(-1,1,1),t=new MeshBasicMaterial;return new Mesh2(e,t)}setTexture(e,t){e.material.map=t.texture,this.switchVideo(t.texture)}getAdapter(){return this.adapter||(this.adapter=new EquirectangularAdapter(this.viewer,{interpolateBackground:!1,resolution:this.config.resolution})),this.adapter}};EquirectangularVideoAdapter.id="equirectangular-video",EquirectangularVideoAdapter.VERSION="5.10.0";export{EquirectangularVideoAdapter};
//# sourceMappingURL=/sm/b52cfd27ae5a8b69bc4541594e57a38a8ba7c051ef5b3fb2336fb80d3b85167b.map