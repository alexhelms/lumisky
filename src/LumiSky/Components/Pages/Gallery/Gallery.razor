@page "/gallery/{TabName?}"
@inject NavigationManager NavigationManager

<PageTitle>Gallery</PageTitle>

<RadzenTabs @bind-SelectedIndex=selectedTabIndex Change="OnTabChanged">
    <Tabs>

        <RadzenTabsItem Text="Images">
            <ImageGallery />
        </RadzenTabsItem>

        <RadzenTabsItem Text="Timelapses">
            <TimelapseGallery />
        </RadzenTabsItem>

        <RadzenTabsItem Text="Panoramas">
            <PanoramaGallery />
        </RadzenTabsItem>

        <RadzenTabsItem Text="Panorama Timelapses">
            <PanoramaTimelapseGallery />
        </RadzenTabsItem>

        @* <RadzenTabsItem Text="Keograms">
            <RadzenRow JustifyContent="JustifyContent.Center" class="rz-my-4">
                <RadzenText>No Keograms Available</RadzenText>
            </RadzenRow>
        </RadzenTabsItem> *@

        <RadzenTabsItem Text="Raw Images">
            <RawImageGallery />
        </RadzenTabsItem>

    </Tabs>
</RadzenTabs>

@code {
    int selectedTabIndex = 0;

    [Parameter]
    public string? TabName { get; set; }

    protected override void OnParametersSet()
    {
        TabName ??= "images";
        SetTabIndexFromName(TabName);
    }

    private void SetTabIndexFromName(string name)
    {
        var newIndex = name switch
        {
            "images" => 0,
            "timelapses" => 1,
            "panoramas" => 2,
            "panorama-timelapses" => 3,
            "raw-images" => 4,
            _ => 0,
        };

        if (newIndex != selectedTabIndex)
        {
            selectedTabIndex = newIndex;
            InvokeAsync(StateHasChanged);
        }
    }

    private void OnTabChanged(int index)
    {
        string name = index switch
        {
            0 => "images",
            1 => "timelapses",
            2 => "panoramas",
            3 => "panorama-timelapses",
            4 => "raw-images",
            _ => "images",
        };

        NavigationManager.NavigateTo($"/gallery/{name}");
    }
}