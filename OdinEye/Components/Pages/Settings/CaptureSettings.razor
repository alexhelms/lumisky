@using OdinEye.Core.Profile
@inject IProfileProvider Profile
@inject NotificationService NotificationService

<RadzenTemplateForm TItem="CaptureSettingsModel" Data="@model" Submit="OnSubmit">
    <RadzenStack>

        <RadzenFieldset>
            <HeaderTemplate>
                <RadzenText TextStyle="TextStyle.Body1" class="rz-mb-0"><strong>Capture</strong></RadzenText>
            </HeaderTemplate>
            <ChildContent>
                <RadzenStack>

                    <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center">
                        <RadzenSwitch @bind-Value="model.AutoStart" />
                        <RadzenLabel Text="Auto Start" Component="True" />
                    </RadzenStack>

                    <RadzenFormField Text="Data Path" Variant="Variant.Outlined" AllowFloatingLabel="false">
                        <RadzenTextBox @bind-Value="model.DataDirectory" Style="width: 100%" />
                    </RadzenFormField>

                    <RadzenFormField Text="Interval [sec]" Variant="Variant.Outlined" AllowFloatingLabel="false">
                        <RadzenNumeric TValue="int" @bind-Value="model.CaptureIntervalSeconds" Min="5" Max="3600" />
                    </RadzenFormField>

                </RadzenStack>
            </ChildContent>
        </RadzenFieldset>

        <RadzenRow>
            <RadzenButton ButtonType="ButtonType.Submit" Text="Save" />
        </RadzenRow>

    </RadzenStack>
</RadzenTemplateForm>

@code {
    private CaptureSettingsModel model = new();

    protected override void OnInitialized()
    {
        model.AutoStart = Profile.Current.Capture.AutoStart;
        model.DataDirectory = Profile.Current.Capture.DataDirectory;
        model.CaptureIntervalSeconds = (int)Profile.Current.Capture.CaptureInterval.TotalSeconds;
    }

    private void OnSubmit(CaptureSettingsModel model)
    {
        Profile.Current.Capture.AutoStart = model.AutoStart;
        Profile.Current.Capture.DataDirectory = model.DataDirectory;
        Profile.Current.Capture.CaptureInterval = TimeSpan.FromSeconds(model.CaptureIntervalSeconds);

        NotificationService.Notify(new NotificationMessage
        {
            Severity = NotificationSeverity.Success,
            Duration = 2000,
            Summary = "Saved!",
        });
    }

    public record CaptureSettingsModel
    {
        public bool AutoStart { get; set; }
        public string DataDirectory { get; set; } = string.Empty;
        public int CaptureIntervalSeconds { get; set; }
    }
}
